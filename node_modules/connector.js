exports.Connector = Connector;

function Connector ( env, prompt, commands ) {

  var self = this;

  self.commands = commands;

  self.connect = function ( connectionId, sessionTimeout ) {
    var connection              = self.env.connections[connectionId] || {};
    var tokens                  = connectionId.split( '@' );
    self.env.context.user      = tokens[0].trim();
    self.env.context.instance  = tokens[1].trim();
    self.env.context.emulating = ( tokens[2] && tokens[2].trim() );
    var dt = new Date(),
        expiryTime = dt.setTime( dt.getTime() + ( sessionTimeout * 60 * 1000 ) ); 
    if ( connection && connection.sessionCookie && ( connection.lastActive.getTime() < dt.getTime() ) ) {
      self.prompt.content = function () { return ( connectionId + '> '); };
      self.prompt.set();
      self.prompt.show();
    }
    else {
      var keypressListener = function( s, key ) {
        self.prompt.readline._ttyWrite( s, key );
      };
      process.stdin.removeAllListeners( 'keypress' );
      self.env.promptForPassword( connectionId, keypressListener );
    }
  };

  self.env = env;

  self.log = function ( o ) {
    self.logData.push( o );
    if (typeof o === 'string' ) {
      console.log( o );
    }
    else {
      console.log( JSON.stringify( o, null, 2 ) );
    }
  };

  self.logData = [];

  self.prompt = prompt;

  self.replConnections = 0;

}
