var MCat = require( 'message-catalog/c2fo/auth.js' ).MCat;

exports.Auth = Auth;

function Auth( net, finishHandler, emitter ) {

  var self = this;

  self.getDetails = function ( connectionId, connection, callback ) {

    var cId       = connectionId.split( '@' );
    var instance  = cId[1].trim();

    if ( !connection || !( connection.sessionCookie ) ) {
      finishHandler( connectionId );
      return;
    }

    self.net.getObject( 'auth/manage',

      function ( response ) {
        connection.lastAction = MCat.userDetailsAction;
        if ( self.isDebugging )
          emitter.emit( 'debug', instance + ' - ' + MCat.userDetails );
        var payload;
        try {
          var payload = JSON.parse( response.body ).payload;
        }
        catch( e ) {
          emitter.emit( 'failedJSONParse', e );
          return;
        }
        connection.lastActive = new Date( payload.created );
        delete payload.created;
        for (p in payload.response) {
          connection[p] = payload.response[p];
        }
        if ( connection.user_type == MCat.SUPPLIER  || connection.user_type == MCat.BUYER ) {
          callback( connectionId, connection );
        }
        else {
          finishHandler( connectionId );
        }
      },
      instance,
      connection.sessionCookie

    );
  };

  self.isDebugging = false;

  self.net = net;

  self.signIn = function ( connectionId, password ) {
 
    var cId      = connectionId.split( '@' );
    var user     = cId[0].trim();
    var instance = cId[1].trim();
    var payload  = {
      user_name: user,
      password : password
    };

    if (cId[2]) {
      payload.euid = cId[2].trim();
    }

    if ( self.isDebugging )
      emitter.emit( 'debug', MCat.connect );

    self.net.post( payload, 'login',
      function ( response ) {
        self.access( connectionId, password, user, instance, response );
      },
      instance
    );
  };

}
