var MCatCommon = require( 'message-catalog/common' ).MCatCommon;

exports.MCat = new MCat();

function MCat () {
  this.agentString       = 'OCAP shell, v';
  // Options for awardColumns:
  // "pollenware_invoice_id","voucher_id","supplier_id","event_id","short_name","name",
  // "payment_due_date","amount","invoice_date","event_winner","invoice_id","discount_amount",
  // "new_check_date""
  this.awardColumns        = ['voucher_id', 'invoice_id', 'invoice_date', 'payment_due_date',
                              'amount', 'discount_amount', 'event_winner'];
  this.failedBuyerBid      = 'buyers cannot bid in their own events';
  this.failedConnect       = 'connection could not be established: ';
  this.failedAmbiguous     = 'ambiguous instruction, skipping: ';
  this.failedLiveEvent     = 'event in progress';
  this.failedNoEvents      = 'no events';
  this.failedNoSupplier    = 'suppliers cannot perform this action';
  this.failedFailure       = 'failure calling failure callback';
  this.failedOCAPresponse  = 'failure calling OCAP callback';
  this.failedOCAPservice   = 'failure calling OCAP service';
  this.failedShellCommand  = 'failure executing shell command';
  this.functions           = 'ocap/main';
  this.helpBlurb           = "type 'h' for help";
  this.offers              = 'retrieving offers for event #';
  this.preOffers           = 'retrieving pre-offers for event #';
  this.sessionGrant        = 'session granted';
  this.submitEvent         = 'submitting event';
  this.successSignin       = 'successful signin';
  this.title               = '(pollenware OCAP)';

  for ( a in MCatCommon) { 
    if ( a in this ) { continue; }
    this[a] = MCatCommon[a];
  }

}
