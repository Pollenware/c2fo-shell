var MCatCommon = require( 'message-catalog/common' ).MCatCommon,
    Util = require( 'util.js' ).Util;

exports.MCat = new MCat();

function MCat () {
  this.agentString        = 'OCAP shell, v';
  this.errorBuyerBid      = 'buyers cannot bid in their own events';
  this.errorConnect       = 'connection could not be established';
  this.errorAmbiguous     = 'ambiguous instruction, skipping';
  this.errorLiveEventMsg  = 'event in progress';
  this.errorEventNotFound = 'event not found';
  this.errorNoEventsMsg   = 'no events';
  this.errorNoSupplierMsg = 'suppliers cannot perform this action';
  this.eventCashLabel     = 'cash pool';
  this.eventFound         = 'event found';
  this.eventOfferLabel    = 'offer';
  this.eventOver          = 'monitor stopped, event over';
  this.eventPreLabel      = 'pre-offer';
  this.eventStatuses      = {0 : 'RED', 1 : 'YELLOW', 2 : 'GREEN'};
  this.eventStatusLabel   = 'status';
  this.exitMsg            = "leaving OCAP";
  this.functions          = 'ocap/main';
  this.helpBlurb          = "type 'h' for help";
  this.helpMsg            = function ( prompt ) { var readme = Util.spitFile( 'help.txt', prompt ); };
  this.invClearMsg        = 'trashing local copies of invoices...';
  // Options for invColumns:
  // "voucher_id","buyer_id","supplier_id","event_id","short_name","name","group_id",
  // "payment_due_date","amount""invoice_date","is_buyer_included","is_supplier_included"
  // "status","invoice_id","has_adjustments","is_supplier_excluded","is_unmatched_adjustment",
  // "is_covering_adjust","is_reserved","is_eligible"
  this.invColumns         = ['supplier_id', 'payment_due_date', 'amount', 'group_id', 'name'];
  this.invPrintMsg        = 'printing invoices... ';
  this.logFile            = 'log/ocap.log';
  this.logClearMsg        = 'log cleared';
  this.logWriteMsg        = 'writing log to';
  this.monitorDelay       = 10000; // expressed in milliseconds
  this.monitorBliveMsg    = 'awaiting buyer decision event';
  this.monitorLiveMsg     = 'live event';
  this.monitorOffMsg      = 'no longer monitoring event';
  this.monitorOnMsg       = 'monitoring event';
  this.monitorSchedMsg    = 'scheduled event';
  this.monitorSearchMsg   = 'searching for event';
  this.nowMonitoredMsg    = 'is already being monitored';
  this.noBasketsMsg       = 'no baskets found';
  this.notFoundMsg        = "command not found type 'h' for help";
  this.preOffersMsg       = 'retrieving pre-offers for event #';
  this.promptPrefix       = 'ocap';
  this.replAddress        = 'localhost';
  this.replUseMsg         = 'visit via telnet';
  this.replPort           = 5100;
  this.replPrompt         = 'ocap repl';
  this.sessionGrantMsg    = 'session granted';
  this.sessionTimeout     = 45; 
  this.successSigninMsg   = 'successful signin';
  this.title              = '(pollenware OCAP)';

  for ( a in MCatCommon) { 
    if ( a in this ) { continue; }
    this[a] = MCatCommon[a];
  }

}
