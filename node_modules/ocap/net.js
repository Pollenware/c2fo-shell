var MCat = require( 'message-catalog/ocap/net' ).MCat,
    request = require( 'third-party/request.js' );

exports.Net = Net;

function Net( userAgent ) {

  var self = this;

  if ( ! MCat.isSecure ) {
    self.protocol = 'http://';
  }
  else {
    self.protocol = 'https://';
  }
 
  self.get = function ( route, err, resp, instance, cookie ) {
    if ( self.isDebugging )
      console.log(MCat.debugPrefix + ' GET ' + self.protocol + instance + '.pollenware.com/services/' + route);
    request(
      {
        'method' : 'get',
        'uri'    : self.protocol + instance + '.pollenware.com/services/' + route,
        'headers': {
          'Referer'      : self.protocol + instance + '.pollenware.com',
          'Cookie'       : cookie,
          'User-Agent'   : userAgent || ( MCat.agentDefault + ' ' + process.argv[1].split( '/' ).pop()  )
         }
      },
      function ( error, response, body ) {
        if ( !error && response.statusCode == 200 ) {
          var ocap = JSON.parse(body);
          if ( ocap.payload.response.error ) {
            err(ocap.payload.response.error_msg );
          }
          else {
            resp( response );
          }
        }
        else {
          ( response && err( response.statusCode ) ) || err();
        }
      }
    );
  };

  self.isDebugging = false;

  self.post = function ( payload, route, err, resp, instance, cookie ) {
    if ( self.isDebugging ) {
      console.log( MCat.debugPrefix + ' ' + JSON.stringify( payload ) );
      console.log( MCat.debugPrefix + ' POST ' + self.protocol + instance + '.pollenware.com/services/' + route);
    }
    request(
      {
        'method' : 'post',
        'uri'    : self.protocol + instance + '.pollenware.com/services/' + route,
        'headers': {
        'Content-Type' : 'application/x-www-form-urlencoded',
        'Cookie'       : cookie,
        'Referer'      : self.protocol + instance + '.pollenware.com'
      },
      'body'   : JSON.stringify( payload )
      },
      function ( error, response, body ) {
        if ( !error && response.statusCode == 200 ) {
          if ( response.body ) {
            var ocap = JSON.parse( response.body );
            if ( ocap.payload.response.error ) {
              err( ocap.payload.response.error_msg );
            }
            else {
              resp( response );
            }
          }
          else {
            return;
          }
        }
        else {
          ( response && err( response.statusCode ) ) || err();
        }
      }
    );
  };

}
