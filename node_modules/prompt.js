var readline = require( 'readline' );

process.stdin.resume();

exports.Prompt = Prompt;

function Prompt( o ) {
  var self = this;
  o = o || {};
  var options = {
    default       : o.default || function () {
      return (new Date()).getTime() + ' ' + process.argv[1].split('/').pop(); 
    },
    exitMsg       : o.exitMsg,
    helpBlurb     : o.helpBlurb,
    noHandlerMsg  : o.noHandlerMsg || 'No handleCommand() was supplied, exiting.',
    title         : o.title,
    version       : o.version
  };

  self.version    = options.version;

  self.set = function () {
    self.readline.setPrompt( self.content() );
  };

  self.show = function () {
    if ( !self.readline ) {
      self.readline = readline.createInterface( process.stdin, process.stdout );
      self.content = self.content || options.default;
      self.set()
      self.readline.on( 'line', function( line ) {
        if( line ) {

          //
          // show() needs handleCommand() to be supplied by the caller.
          //
          if ( self.handleCommand ) {
            self.handleCommand( line.trim() );
          }
          else {
            console.log( "\n" + options.noHandlerMsg );
            self.readline.close();
            process.stdin.destroy();
            process.exit( 0 );
          }
        }
      }).on('close', function() {
        console.log( "\n" + options.exitMsg );
        self.readline.close();
        process.stdin.destroy();
        process.exit( 0 );
      });
      console.log( process.argv[1].split( '/' ).pop() + ' ' + options.title + ' v' + options.version + ' ' + ( new Date() ) );
      console.log( options.helpBlurb );
    }
    self.set();
    self.readline.prompt();
  };

}
